//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// The FileWatcherServiceSection Configuration Section.
    /// </summary>
    public partial class FileWatcherServiceSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the FileWatcherServiceSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string FileWatcherServiceSectionSectionName = "FileWatcherService";
        
        /// <summary>
        /// The XML path of the FileWatcherServiceSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string FileWatcherServiceSectionSectionPath = "FileWatcherService";
        
        /// <summary>
        /// Gets the FileWatcherServiceSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::FileWatcherService.Configuration.FileWatcherServiceSection Instance
        {
            get
            {
                return ((global::FileWatcherService.Configuration.FileWatcherServiceSection)(global::System.Configuration.ConfigurationManager.GetSection(global::FileWatcherService.Configuration.FileWatcherServiceSection.FileWatcherServiceSectionSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.FileWatcherServiceSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.FileWatcherServiceSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Patterns Property
        /// <summary>
        /// The XML name of the <see cref="Patterns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PatternsPropertyName = "patterns";
        
        /// <summary>
        /// Gets or sets the Patterns.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Patterns.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.FileWatcherServiceSection.PatternsPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::FileWatcherService.Configuration.FilePatterns Patterns
        {
            get
            {
                return ((global::FileWatcherService.Configuration.FilePatterns)(base[global::FileWatcherService.Configuration.FileWatcherServiceSection.PatternsPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.FileWatcherServiceSection.PatternsPropertyName] = value;
            }
        }
        #endregion
        
        #region StopService Property
        /// <summary>
        /// The XML name of the <see cref="StopService"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string StopServicePropertyName = "stopService";
        
        /// <summary>
        /// Gets or sets the StopService.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The StopService.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.FileWatcherServiceSection.StopServicePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::FileWatcherService.Configuration.StopService StopService
        {
            get
            {
                return ((global::FileWatcherService.Configuration.StopService)(base[global::FileWatcherService.Configuration.FileWatcherServiceSection.StopServicePropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.FileWatcherServiceSection.StopServicePropertyName] = value;
            }
        }
        #endregion
        
        #region SendMail Property
        /// <summary>
        /// The XML name of the <see cref="SendMail"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SendMailPropertyName = "sendMail";
        
        /// <summary>
        /// Gets or sets the SendMail.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The SendMail.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.FileWatcherServiceSection.SendMailPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::FileWatcherService.Configuration.SendMail SendMail
        {
            get
            {
                return ((global::FileWatcherService.Configuration.SendMail)(base[global::FileWatcherService.Configuration.FileWatcherServiceSection.SendMailPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.FileWatcherServiceSection.SendMailPropertyName] = value;
            }
        }
        #endregion
        
        #region Watch Property
        /// <summary>
        /// The XML name of the <see cref="Watch"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string WatchPropertyName = "watch";
        
        /// <summary>
        /// Gets or sets the Watch.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Watch.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.FileWatcherServiceSection.WatchPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::FileWatcherService.Configuration.WatchCollection Watch
        {
            get
            {
                return ((global::FileWatcherService.Configuration.WatchCollection)(base[global::FileWatcherService.Configuration.FileWatcherServiceSection.WatchPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.FileWatcherServiceSection.WatchPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// A collection of FilePattern instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::FileWatcherService.Configuration.FilePattern), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::FileWatcherService.Configuration.FilePatterns.FilePatternPropertyName)]
    public partial class FilePatterns : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::FileWatcherService.Configuration.FilePattern"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string FilePatternPropertyName = "pattern";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::FileWatcherService.Configuration.FilePatterns.FilePatternPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::FileWatcherService.Configuration.FilePatterns.FilePatternPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::FileWatcherService.Configuration.FilePattern)(element)).Value;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::FileWatcherService.Configuration.FilePattern"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::FileWatcherService.Configuration.FilePattern"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::FileWatcherService.Configuration.FilePattern();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.FilePattern"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::FileWatcherService.Configuration.FilePattern"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.FilePattern this[int index]
        {
            get
            {
                return ((global::FileWatcherService.Configuration.FilePattern)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.FilePattern"/> with the specified key.
        /// </summary>
        /// <param name="value">The key of the <see cref="global::FileWatcherService.Configuration.FilePattern"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.FilePattern this[object value]
        {
            get
            {
                return ((global::FileWatcherService.Configuration.FilePattern)(base.BaseGet(value)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::FileWatcherService.Configuration.FilePattern"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="pattern">The <see cref="global::FileWatcherService.Configuration.FilePattern"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::FileWatcherService.Configuration.FilePattern pattern)
        {
            base.BaseAdd(pattern);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::FileWatcherService.Configuration.FilePattern"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="pattern">The <see cref="global::FileWatcherService.Configuration.FilePattern"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::FileWatcherService.Configuration.FilePattern pattern)
        {
            base.BaseRemove(this.GetElementKey(pattern));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.FilePattern"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::FileWatcherService.Configuration.FilePattern"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.FilePattern GetItemAt(int index)
        {
            return ((global::FileWatcherService.Configuration.FilePattern)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.FilePattern"/> with the specified key.
        /// </summary>
        /// <param name="value">The key of the <see cref="global::FileWatcherService.Configuration.FilePattern"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.FilePattern GetItemByKey(string value)
        {
            return ((global::FileWatcherService.Configuration.FilePattern)(base.BaseGet(((object)(value)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// The FilePattern Configuration Element.
    /// </summary>
    public partial class FilePattern : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.FilePattern.ValuePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.FilePattern.ValuePropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.FilePattern.ValuePropertyName] = value;
            }
        }
        #endregion
        
        #region Regex Property
        /// <summary>
        /// The XML name of the <see cref="Regex"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string RegexPropertyName = "regex";
        
        /// <summary>
        /// Gets or sets the Regex.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Regex.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.FilePattern.RegexPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool Regex
        {
            get
            {
                return ((bool)(base[global::FileWatcherService.Configuration.FilePattern.RegexPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.FilePattern.RegexPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// The StopService Configuration Element.
    /// </summary>
    public partial class StopService : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.StopService.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.StopService.NamePropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.StopService.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// The Directory Configuration Element.
    /// </summary>
    public partial class Directory : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Path Property
        /// <summary>
        /// The XML name of the <see cref="Path"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PathPropertyName = "path";
        
        /// <summary>
        /// Gets or sets the Path.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Path.")]
        [global::System.Configuration.CallbackValidatorAttribute(Type=typeof(global::FileWatcherService.Configuration.FilePathValidatorCallbackValidatorClass), CallbackMethodName="ValidateCallback")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.Directory.PathPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false, DefaultValue="someFile")]
        public virtual string Path
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.Directory.PathPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.Directory.PathPropertyName] = value;
            }
        }
        #endregion
        
        #region Event Property
        /// <summary>
        /// The XML name of the <see cref="Event"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EventPropertyName = "event";
        
        /// <summary>
        /// Gets or sets the Event.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Event.")]
        [global::System.Configuration.CallbackValidatorAttribute(Type=typeof(global::FileWatcherService.Configuration.WatchEventCallbackValidatorClass), CallbackMethodName="ValidateCallback")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.Directory.EventPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue="created")]
        public virtual string Event
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.Directory.EventPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.Directory.EventPropertyName] = value;
            }
        }
        #endregion
        
        #region IncludeSubDirs Property
        /// <summary>
        /// The XML name of the <see cref="IncludeSubDirs"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string IncludeSubDirsPropertyName = "includeSubDirs";
        
        /// <summary>
        /// Gets or sets the IncludeSubDirs.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The IncludeSubDirs.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.Directory.IncludeSubDirsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool IncludeSubDirs
        {
            get
            {
                return ((bool)(base[global::FileWatcherService.Configuration.Directory.IncludeSubDirsPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.Directory.IncludeSubDirsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// A collection of Directory instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::FileWatcherService.Configuration.Directory), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::FileWatcherService.Configuration.WatchCollection.DirectoryPropertyName)]
    public partial class WatchCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::FileWatcherService.Configuration.Directory"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DirectoryPropertyName = "directory";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::FileWatcherService.Configuration.WatchCollection.DirectoryPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::FileWatcherService.Configuration.WatchCollection.DirectoryPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::FileWatcherService.Configuration.Directory)(element)).Path;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::FileWatcherService.Configuration.Directory"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::FileWatcherService.Configuration.Directory"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::FileWatcherService.Configuration.Directory();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.Directory"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::FileWatcherService.Configuration.Directory"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.Directory this[int index]
        {
            get
            {
                return ((global::FileWatcherService.Configuration.Directory)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.Directory"/> with the specified key.
        /// </summary>
        /// <param name="path">The key of the <see cref="global::FileWatcherService.Configuration.Directory"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.Directory this[object path]
        {
            get
            {
                return ((global::FileWatcherService.Configuration.Directory)(base.BaseGet(path)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::FileWatcherService.Configuration.Directory"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="directory">The <see cref="global::FileWatcherService.Configuration.Directory"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::FileWatcherService.Configuration.Directory directory)
        {
            base.BaseAdd(directory);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::FileWatcherService.Configuration.Directory"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="directory">The <see cref="global::FileWatcherService.Configuration.Directory"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::FileWatcherService.Configuration.Directory directory)
        {
            base.BaseRemove(this.GetElementKey(directory));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.Directory"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::FileWatcherService.Configuration.Directory"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.Directory GetItemAt(int index)
        {
            return ((global::FileWatcherService.Configuration.Directory)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.Directory"/> with the specified key.
        /// </summary>
        /// <param name="path">The key of the <see cref="global::FileWatcherService.Configuration.Directory"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.Directory GetItemByKey(string path)
        {
            return ((global::FileWatcherService.Configuration.Directory)(base.BaseGet(((object)(path)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// The MailReceiverAddress Configuration Element.
    /// </summary>
    public partial class MailReceiverAddress : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Address Property
        /// <summary>
        /// The XML name of the <see cref="Address"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AddressPropertyName = "address";
        
        /// <summary>
        /// Gets or sets the Address.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Address.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.MailReceiverAddress.AddressPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Address
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.MailReceiverAddress.AddressPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.MailReceiverAddress.AddressPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// The SmtpServer Configuration Element.
    /// </summary>
    public partial class SmtpServer : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Host Property
        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HostPropertyName = "host";
        
        /// <summary>
        /// Gets or sets the Host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Host.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.SmtpServer.HostPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Host
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.SmtpServer.HostPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.SmtpServer.HostPropertyName] = value;
            }
        }
        #endregion
        
        #region Port Property
        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PortPropertyName = "port";
        
        /// <summary>
        /// Gets or sets the Port.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Port.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.SmtpServer.PortPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::FileWatcherService.Configuration.SmtpServer.PortPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.SmtpServer.PortPropertyName] = value;
            }
        }
        #endregion
        
        #region EnableSSL Property
        /// <summary>
        /// The XML name of the <see cref="EnableSSL"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EnableSSLPropertyName = "enableSSL";
        
        /// <summary>
        /// Gets or sets the EnableSSL.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The EnableSSL.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.SmtpServer.EnableSSLPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool EnableSSL
        {
            get
            {
                return ((bool)(base[global::FileWatcherService.Configuration.SmtpServer.EnableSSLPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.SmtpServer.EnableSSLPropertyName] = value;
            }
        }
        #endregion
        
        #region Login Property
        /// <summary>
        /// The XML name of the <see cref="Login"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LoginPropertyName = "login";
        
        /// <summary>
        /// Gets or sets the Login.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Login.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.SmtpServer.LoginPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Login
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.SmtpServer.LoginPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.SmtpServer.LoginPropertyName] = value;
            }
        }
        #endregion
        
        #region Password Property
        /// <summary>
        /// The XML name of the <see cref="Password"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string PasswordPropertyName = "password";
        
        /// <summary>
        /// Gets or sets the Password.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Password.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.SmtpServer.PasswordPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Password
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.SmtpServer.PasswordPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.SmtpServer.PasswordPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// A collection of MailReceiverAddress instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::FileWatcherService.Configuration.MailReceiverAddress), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::FileWatcherService.Configuration.Message.MailReceiverAddressPropertyName)]
    public partial class Message : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MailReceiverAddressPropertyName = "recipient";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::FileWatcherService.Configuration.Message.MailReceiverAddressPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::FileWatcherService.Configuration.Message.MailReceiverAddressPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::FileWatcherService.Configuration.MailReceiverAddress)(element)).Address;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::FileWatcherService.Configuration.MailReceiverAddress();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.MailReceiverAddress this[int index]
        {
            get
            {
                return ((global::FileWatcherService.Configuration.MailReceiverAddress)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.MailReceiverAddress this[object address]
        {
            get
            {
                return ((global::FileWatcherService.Configuration.MailReceiverAddress)(base.BaseGet(address)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="recipient">The <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::FileWatcherService.Configuration.MailReceiverAddress recipient)
        {
            base.BaseAdd(recipient);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="recipient">The <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::FileWatcherService.Configuration.MailReceiverAddress recipient)
        {
            base.BaseRemove(this.GetElementKey(recipient));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.MailReceiverAddress GetItemAt(int index)
        {
            return ((global::FileWatcherService.Configuration.MailReceiverAddress)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> with the specified key.
        /// </summary>
        /// <param name="address">The key of the <see cref="global::FileWatcherService.Configuration.MailReceiverAddress"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::FileWatcherService.Configuration.MailReceiverAddress GetItemByKey(string address)
        {
            return ((global::FileWatcherService.Configuration.MailReceiverAddress)(base.BaseGet(((object)(address)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region SubjectTemplate Property
        /// <summary>
        /// The XML name of the <see cref="SubjectTemplate"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SubjectTemplatePropertyName = "subjectTemplate";
        
        /// <summary>
        /// Gets or sets the SubjectTemplate.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The SubjectTemplate.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.Message.SubjectTemplatePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string SubjectTemplate
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.Message.SubjectTemplatePropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.Message.SubjectTemplatePropertyName] = value;
            }
        }
        #endregion
        
        #region BodyTemplatePath Property
        /// <summary>
        /// The XML name of the <see cref="BodyTemplatePath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string BodyTemplatePathPropertyName = "bodyTemplatePath";
        
        /// <summary>
        /// Gets or sets the BodyTemplatePath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The BodyTemplatePath.")]
        [global::System.Configuration.CallbackValidatorAttribute(Type=typeof(global::FileWatcherService.Configuration.FilePathValidatorCallbackValidatorClass), CallbackMethodName="ValidateCallback")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.Message.BodyTemplatePathPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue="body.txt")]
        public virtual string BodyTemplatePath
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.Message.BodyTemplatePathPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.Message.BodyTemplatePathPropertyName] = value;
            }
        }
        #endregion
        
        #region IsBodyHtml Property
        /// <summary>
        /// The XML name of the <see cref="IsBodyHtml"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string IsBodyHtmlPropertyName = "isBodyHtml";
        
        /// <summary>
        /// Gets or sets the IsBodyHtml.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The IsBodyHtml.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.Message.IsBodyHtmlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool IsBodyHtml
        {
            get
            {
                return ((bool)(base[global::FileWatcherService.Configuration.Message.IsBodyHtmlPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.Message.IsBodyHtmlPropertyName] = value;
            }
        }
        #endregion
        
        #region From Property
        /// <summary>
        /// The XML name of the <see cref="From"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string FromPropertyName = "from";
        
        /// <summary>
        /// Gets or sets the From.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The From.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.Message.FromPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string From
        {
            get
            {
                return ((string)(base[global::FileWatcherService.Configuration.Message.FromPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.Message.FromPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// The SendMail Configuration Element.
    /// </summary>
    public partial class SendMail : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Server Property
        /// <summary>
        /// The XML name of the <see cref="Server"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string ServerPropertyName = "server";
        
        /// <summary>
        /// Gets or sets the Server.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Server.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.SendMail.ServerPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::FileWatcherService.Configuration.SmtpServer Server
        {
            get
            {
                return ((global::FileWatcherService.Configuration.SmtpServer)(base[global::FileWatcherService.Configuration.SendMail.ServerPropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.SendMail.ServerPropertyName] = value;
            }
        }
        #endregion
        
        #region Message Property
        /// <summary>
        /// The XML name of the <see cref="Message"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MessagePropertyName = "message";
        
        /// <summary>
        /// Gets or sets the Message.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Message.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::FileWatcherService.Configuration.SendMail.MessagePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::FileWatcherService.Configuration.Message Message
        {
            get
            {
                return ((global::FileWatcherService.Configuration.Message)(base[global::FileWatcherService.Configuration.SendMail.MessagePropertyName]));
            }
            set
            {
                base[global::FileWatcherService.Configuration.SendMail.MessagePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// ListenerType.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
    [global::System.FlagsAttribute()]
    public enum ListenerType
    {
        
        /// <summary>
        /// Created.
        /// </summary>
        Created = 1,
        
        /// <summary>
        /// Deleted.
        /// </summary>
        Deleted = 4,
        
        /// <summary>
        /// Changed.
        /// </summary>
        Changed = 2,
        
        /// <summary>
        /// Renamed.
        /// </summary>
        Renamed = 8,
    }
}
namespace FileWatcherService.Configuration
{
    
    
    /// <summary>
    /// Class for the FilePathValidator callback validator
    /// </summary>
    public partial class FilePathValidatorCallbackValidatorClass
    {
        
        /// <summary>
        /// Validation callback for the FilePathValidator callback validator
        /// </summary>
        /// <param name="value">The value to validate.</param>
        /// <exception cref="global::System.ArgumentException">The value was not valid.</exception>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static void ValidateCallback(object value)
        {
            // IMPORTANT NOTE: The code below does not build by default.
            // You have placed a callback validator on this property.
            // Copy the commented code below to a separate file and 
            // implement the method.
            // 
            // public partial class FilePathValidatorCallbackValidatorClass
            // {
            //     
            //     public static void Validate(object value)
            //     {
            //         throw new global::System.NotImplementedException();
            //     }
            // }
            // 
            global::FileWatcherService.Configuration.FilePathValidatorCallbackValidatorClass.Validate(value);
        }
    }
    
    /// <summary>
    /// Class for the WatchEvent callback validator
    /// </summary>
    public partial class WatchEventCallbackValidatorClass
    {
        
        /// <summary>
        /// Validation callback for the WatchEvent callback validator
        /// </summary>
        /// <param name="value">The value to validate.</param>
        /// <exception cref="global::System.ArgumentException">The value was not valid.</exception>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static void ValidateCallback(object value)
        {
            // IMPORTANT NOTE: The code below does not build by default.
            // You have placed a callback validator on this property.
            // Copy the commented code below to a separate file and 
            // implement the method.
            // 
            // public partial class WatchEventCallbackValidatorClass
            // {
            //     
            //     public static void Validate(object value)
            //     {
            //         throw new global::System.NotImplementedException();
            //     }
            // }
            // 
            global::FileWatcherService.Configuration.WatchEventCallbackValidatorClass.Validate(value);
        }
    }
}
